{"version":3,"sources":["constants/memberConstants.js","constants/organizationConstants.js","store.js","reducers/memberReducers.js","reducers/organizationReducers.js","components/Loader.js","components/Message.js","actions/organizationActions.js","actions/memberActions.js","components/Header.js","components/Footer.js","images/MotoOfOurOrganization.JPG","screens/DonationScreen.js","screens/MemberScreens/MemberHomeScreen.js","screens/OrganizationScreens/OrganizationHomeScreen.js","screens/MemberScreens/MemberRegisterScreen.js","screens/MemberScreens/MemberLoginScreen.js","screens/MemberScreens/MemberUpdateDetailsScreen.js","screens/OrganizationScreens/OrganizationViewMembersScreen.js","screens/OrganizationScreens/OrganizationRegisterScreen.js","screens/OrganizationScreens/OrganizationLoginScreen.js","screens/OrganizationScreens/OrganizationUpdateDetailsScreen.js","screens/OrganizationScreens/OrganizationPostsViewPostsScreen.js","screens/OrganizationScreens/OrganizationPostsCreatePostsScreen.js","screens/MemberScreens/MemberViewTasksScreen.js","App.js","reportWebVitals.js","index.js"],"names":["MEMBER_TASKS_LIST_REQUEST","MEMBER_TASKS_LIST_SUCCESS","MEMBER_TASKS_LIST_FAIL","MEMBER_LIST_REQUEST","MEMBER_LIST_SUCCESS","MEMBER_LIST_FAIL","MEMBER_LOGIN_REQUEST","MEMBER_LOGIN_SUCCESS","MEMBER_LOGIN_FAIL","MEMBER_LOGOUT","MEMBER_REGISTER_REQUEST","MEMBER_REGISTER_SUCCESS","MEMBER_REGISTER_FAIL","MEMBER_DETAILS_REQUEST","MEMBER_DETAILS_SUCCESS","MEMBER_DETAILS_FAIL","MEMBER_DETAILS_RESET","MEMBER_UPDATE_PROFILE_REQUEST","MEMBER_UPDATE_PROFILE_SUCCESS","MEMBER_UPDATE_PROFILE_FAIL","MEMBER_UPDATE_PROFILE_RESET","ORGANIZATION_UPDATE_POSTS_LIST_REQUEST","ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS","ORGANIZATION_UPDATE_POSTS_LIST_FAIL","ORGANIZATION_POSTS_LIST_REQUEST","ORGANIZATION_POSTS_LIST_SUCCESS","ORGANIZATION_POSTS_LIST_FAIL","ORGANIZATION_POSTS_CREATE_POST_REQUEST","ORGANIZATION_POSTS_CREATE_POST_SUCCESS","ORGANIZATION_POSTS_CREATE_POST_FAIL","ORGANIZATION_LOGIN_REQUEST","ORGANIZATION_LOGIN_SUCCESS","ORGANIZATION_LOGIN_FAIL","ORGANIZATION_LOGOUT","ORGANIZATION_REGISTER_REQUEST","ORGANIZATION_REGISTER_SUCCESS","ORGANIZATION_REGISTER_FAIL","ORGANIZATION_DETAILS_REQUEST","ORGANIZATION_DETAILS_SUCCESS","ORGANIZATION_DETAILS_FAIL","ORGANIZATION_DETAILS_RESET","ORGANIZATION_UPDATE_PROFILE_REQUEST","ORGANIZATION_UPDATE_PROFILE_SUCCESS","ORGANIZATION_UPDATE_PROFILE_FAIL","ORGANIZATION_UPDATE_PROFILE_RESET","reducer","combineReducers","memberList","state","members","action","type","loading","payload","error","memberLogin","memberInfo","memberRegister","organizationRegister","organizationInfo","organizationLogin","memberDetails","member","memberUpdateProfile","success","organizationDetails","organization","organizationUpdateProfile","organizationPostList","organizationPosts","organizationPostCreatePost","organizationPostsCreatePost","memberTasksList","memberTask","organizationPostUpdateList","organizationPostsUpdatePost","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Loader","Spinner","animation","role","style","height","width","margin","display","Message","variant","children","Alert","organizationPostslist","postedByOrganization","dispatch","getState","a","config","headers","axios","post","data","response","message","listMembers","get","Header","history","useSelector","useDispatch","logoutHandler","removeItem","Navbar","bg","expand","collapseOnSelect","Container","to","className","Brand","class","Toggle","aria-controls","Collapse","id","NavDropdown","title","email","Item","onClick","Nav","Link","Footer","background","Row","Col","DonationScreen","disabled","color","href","MemberHomeScreen","OrganizationHomeScreen","MemberRegisterScreen","useState","setEmail","password","setPassword","username","setUsername","addressLocation","setAddressLocation","useEffect","Form","onSubmit","e","preventDefault","setItem","stringify","membersRegister","Group","controlId","Label","Control","placeholder","value","onChange","target","Heading","Button","MemberLoginScreen","location","redirect","search","split","push","membersLogin","MemberUpdateDetailsScreen","bloodGroup","setBloodGroup","_id","put","membersUpdateProfile","OrganizationViewMembersScreen","Card","Table","striped","bordered","hover","map","classNmae","Object","keys","length","OrganizationRegisterScreen","organizationsRegister","OrganizationLoginScreen","organizationsLogin","OrganizationUpdateDetailsScreen","chairman","setChairman","organizationsUpdateProfile","OrganizationPostsViewPostsScreen","organizationPost","editModel","setEditmodel","setSelectedPost","setRequirementInformation","setMemberSelected","post_id","setPost_id","selectedFile","setSelectedFile","description","setDescription","videoPost_id","setVideoPost_id","errorOrganizationPostUpdateList","loadingOrganizationPostUpdateList","handleClose","onChangeHandler1","files","console","log","formData","FormData","append","fetch","method","body","alert","name","index","postedByOrganizationEmail","controls","src","video_file","moment","createdAt","format","requirementInformation","MemberSelected","Modal","show","onHide","top","closeButton","Title","Body","OrganizationPostsCreatePostsScreen","organizationsPostsCreatePost","MemberViewTasksScreen","memberTasks","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79073317.chunk.js","sourcesContent":["\nexport const MEMBER_TASKS_LIST_REQUEST = 'MEMBER_TASKS_LIST_REQUEST'\nexport const MEMBER_TASKS_LIST_SUCCESS = 'MEMBER_TASKS_LIST_SUCCESS'\nexport const MEMBER_TASKS_LIST_FAIL = 'MEMBER_TASKS_LIST_FAIL'\n\nexport const MEMBER_LIST_REQUEST = 'MEMBER_LIST_REQUEST'\nexport const MEMBER_LIST_SUCCESS = 'MEMBER_LIST_SUCCESS'\nexport const MEMBER_LIST_FAIL = 'MEMBER_LIST_FAIL'\n\nexport const MEMBER_LOGIN_REQUEST = 'MEMBER_LOGIN_REQUEST'\nexport const MEMBER_LOGIN_SUCCESS = 'MEMBER_LOGIN_SUCCESS'\nexport const MEMBER_LOGIN_FAIL = 'MEMBER_LOGIN_FAIL'\n\nexport const MEMBER_LOGOUT = 'MEMBER_LOGOUT'\n\n\nexport const MEMBER_REGISTER_REQUEST = 'MEMBER_REGISTER_REQUEST'\nexport const MEMBER_REGISTER_SUCCESS = 'MEMBER_REGISTER_SUCCESS'\nexport const MEMBER_REGISTER_FAIL = 'MEMBER_REGISTER_FAIL'\n\nexport const MEMBER_DETAILS_REQUEST = 'MEMBER_DETAILS_REQUEST'\nexport const MEMBER_DETAILS_SUCCESS = 'MEMBER_DETAILS_SUCCESS'\nexport const MEMBER_DETAILS_FAIL = 'MEMBER_DETAILS_FAIL'\nexport const MEMBER_DETAILS_RESET = 'MEMBER_DETAILS_RESET'\n\nexport const MEMBER_UPDATE_PROFILE_REQUEST = 'MEMBER_UPDATE_PROFILE_REQUEST'\nexport const MEMBER_UPDATE_PROFILE_SUCCESS = 'MEMBER_UPDATE_PROFILE_SUCCESS'\nexport const MEMBER_UPDATE_PROFILE_FAIL = 'MEMBER_UPDATE_PROFILE_FAIL'\nexport const MEMBER_UPDATE_PROFILE_RESET = 'MEMBER_UPDATE_PROFILE_RESET'","export const ORGANIZATION_UPDATE_POSTS_LIST_REQUEST = 'ORGANIZATION_UPDATE_POSTS_LIST_REQUEST'\nexport const ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS = 'ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS'\nexport const ORGANIZATION_UPDATE_POSTS_LIST_FAIL = 'ORGANIZATION_UPDATE_POSTS_LIST_FAIL'\n\n\n\n\nexport const ORGANIZATION_POSTS_LIST_REQUEST = 'ORGANIZATION_POST_LIST_REQUEST'\nexport const ORGANIZATION_POSTS_LIST_SUCCESS = 'ORGANIZATION_POST_LIST_SUCCESS'\nexport const ORGANIZATION_POSTS_LIST_FAIL = 'ORGANIZATION_POSTS_LIST_FAIL'\n\nexport const ORGANIZATION_POSTS_CREATE_POST_REQUEST = 'ORGANIZATION_POSTS_CREATE_POST_REQUEST'\nexport const ORGANIZATION_POSTS_CREATE_POST_SUCCESS = 'ORGANIZATION_POSTS_CREATE_POST_SUCCESS'\nexport const ORGANIZATION_POSTS_CREATE_POST_FAIL = 'ORGANIZATION_POSTS_CREATE_POST_FAIL'\n\n\nexport const ORGANIZATION_LOGIN_REQUEST = 'ORGANIZATION_LOGIN_REQUEST'\nexport const ORGANIZATION_LOGIN_SUCCESS = 'ORGANIZATION_LOGIN_SUCCESS'\nexport const ORGANIZATION_LOGIN_FAIL = 'ORGANIZATION_LOGIN_FAIL'\nexport const ORGANIZATION_LOGOUT = 'ORGANIZATION_LOGOUT'\n\n\nexport const ORGANIZATION_REGISTER_REQUEST = 'ORGANIZATION_REGISTER_REQUEST'\nexport const ORGANIZATION_REGISTER_SUCCESS = 'ORGANIZATION_REGISTER_SUCCESS'\nexport const ORGANIZATION_REGISTER_FAIL = 'ORGANIZATION_REGISTER_FAIL'\n\n\n\nexport const ORGANIZATION_DETAILS_REQUEST = 'ORGANIZATION_DETAILS_REQUEST'\nexport const ORGANIZATION_DETAILS_SUCCESS = 'ORGANIZATION_DETAILS_SUCCESS'\nexport const ORGANIZATION_DETAILS_FAIL = 'ORGANIZATION_DETAILS_FAIL'\nexport const ORGANIZATION_DETAILS_RESET = 'ORGANIZATION_DETAILS_RESET'\n\nexport const ORGANIZATION_UPDATE_PROFILE_REQUEST = 'ORGANIZATION_UPDATE_PROFILE_REQUEST'\nexport const ORGANIZATION_UPDATE_PROFILE_SUCCESS = 'ORGANIZATION_UPDATE_PROFILE_SUCCESS'\nexport const ORGANIZATION_UPDATE_PROFILE_FAIL = 'ORGANIZATION_UPDATE_PROFILE_FAIL'\nexport const ORGANIZATION_UPDATE_PROFILE_RESET = 'ORGANIZATION_UPDATE_PROFILE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { memberListReducer, memberLoginReducer, memberRegisterReducer, memberDetailsReducer, memberUpdateProfileReducer, memberTasksListReducer } from './reducers/memberReducers'\nimport { organizationRegisterReducer, organizationLoginReducer, organizationDetailsReducer, organizationUpdateProfileReducer, organizationPostListReducer, organizationPostCreatePostReducer, organizationPostUpdatePostReducer } from './reducers/organizationReducers'\n\n\nconst reducer = combineReducers({\n    memberList: memberListReducer,\n    memberLogin: memberLoginReducer,\n    memberRegister: memberRegisterReducer,\n    organizationRegister: organizationRegisterReducer,\n    organizationLogin: organizationLoginReducer,\n    memberDetails: memberDetailsReducer,\n    memberUpdateProfile: memberUpdateProfileReducer,\n    organizationDetails: organizationDetailsReducer,\n    organizationUpdateProfile: organizationUpdateProfileReducer,\n    organizationPostList: organizationPostListReducer,\n    organizationPostCreatePost: organizationPostCreatePostReducer,\n    memberTasksList: memberTasksListReducer,\n    organizationPostUpdateList: organizationPostUpdatePostReducer,\n\n})\n\nconst memberInfoFromStorage = localStorage.getItem('memberInfo') ?\n    JSON.parse(localStorage.getItem('memberInfo')) : null\n\nconst organizationInfoFromStorage = localStorage.getItem('organizationInfo') ?\n    JSON.parse(localStorage.getItem('organizationInfo')) : null\n\nconst initialState = {\n    memberLogin: { memberInfo: memberInfoFromStorage },\n    organizationLogin: { organizationInfo: organizationInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import axios from 'axios'\nimport {\n    MEMBER_LIST_REQUEST, MEMBER_LIST_SUCCESS, MEMBER_LIST_FAIL,\n    MEMBER_LOGIN_REQUEST, MEMBER_LOGIN_SUCCESS, MEMBER_LOGIN_FAIL, MEMBER_LOGOUT,\n    MEMBER_REGISTER_SUCCESS, MEMBER_REGISTER_REQUEST, MEMBER_REGISTER_FAIL,\n    MEMBER_DETAILS_REQUEST,\n    MEMBER_DETAILS_SUCCESS,\n    MEMBER_DETAILS_FAIL,\n    MEMBER_DETAILS_RESET,\n    MEMBER_UPDATE_PROFILE_REQUEST,\n    MEMBER_UPDATE_PROFILE_SUCCESS,\n    MEMBER_UPDATE_PROFILE_FAIL,\n    MEMBER_UPDATE_PROFILE_RESET,\n    MEMBER_TASKS_LIST_REQUEST,\n    MEMBER_TASKS_LIST_SUCCESS,\n    MEMBER_TASKS_LIST_FAIL,\n} from '../constants/memberConstants'\n\n\n\nexport const memberTasksListReducer = (state = { memberTask: [] }, action) => {\n    switch (action.type) {\n        case MEMBER_TASKS_LIST_REQUEST:\n            return { loading: true, state }\n\n        case MEMBER_TASKS_LIST_SUCCESS:\n            return { loading: false, memberTask: action.payload }\n\n        case MEMBER_TASKS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const memberListReducer = (state = { members: [] }, action) => {\n    switch (action.type) {\n        case MEMBER_LIST_REQUEST:\n            return { loading: true, state }\n\n        case MEMBER_LIST_SUCCESS:\n            return { loading: false, members: action.payload }\n\n        case MEMBER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const memberLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case MEMBER_LOGIN_SUCCESS:\n            return { loading: false, memberInfo: action.payload }\n\n        case MEMBER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n\n}\n\n\n\nexport const memberRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case MEMBER_REGISTER_SUCCESS:\n            return { loading: false, memberInfo: action.payload }\n\n        case MEMBER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const memberDetailsReducer = (state = { member: {} }, action) => {\n    switch (action.type) {\n        case MEMBER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case MEMBER_DETAILS_SUCCESS:\n            return { loading: false, member: action.payload }\n\n        case MEMBER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_DETAILS_RESET:\n            return { member: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const memberUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case MEMBER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, memberInfo: action.payload }\n\n        case MEMBER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n","import axios from 'axios'\nimport {\n\n    ORGANIZATION_REGISTER_REQUEST, ORGANIZATION_REGISTER_SUCCESS, ORGANIZATION_REGISTER_FAIL, ORGANIZATION_LOGOUT,\n    ORGANIZATION_LOGIN_REQUEST, ORGANIZATION_LOGIN_SUCCESS, ORGANIZATION_LOGIN_FAIL,\n    ORGANIZATION_DETAILS_REQUEST,\n    ORGANIZATION_DETAILS_SUCCESS,\n    ORGANIZATION_DETAILS_FAIL,\n    ORGANIZATION_DETAILS_RESET,\n    ORGANIZATION_UPDATE_PROFILE_REQUEST,\n    ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n    ORGANIZATION_UPDATE_PROFILE_FAIL,\n    ORGANIZATION_UPDATE_PROFILE_RESET,\n    ORGANIZATION_POSTS_LIST_REQUEST,\n    ORGANIZATION_POSTS_LIST_SUCCESS,\n    ORGANIZATION_POSTS_LIST_FAIL,\n    ORGANIZATION_POSTS_CREATE_POST_REQUEST,\n    ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n    ORGANIZATION_POSTS_CREATE_POST_FAIL,\n\n    ORGANIZATION_UPDATE_POSTS_LIST_REQUEST,\n    ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n    ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n\n} from '../constants/organizationConstants'\n\n\nexport const organizationPostUpdatePostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_UPDATE_POSTS_LIST_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS:\n            return { loading: false, organizationPostsUpdatePost: action.payload }\n\n        case ORGANIZATION_UPDATE_POSTS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n\n}\n\n\nexport const organizationPostListReducer = (state = { organizationPosts: [] }, action) => {\n    switch (action.type) {\n        case ORGANIZATION_POSTS_LIST_REQUEST:\n            return { loading: true, state }\n\n        case ORGANIZATION_POSTS_LIST_SUCCESS:\n            return { loading: false, organizationPosts: action.payload }\n\n        case ORGANIZATION_POSTS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const organizationPostCreatePostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_POSTS_CREATE_POST_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_POSTS_CREATE_POST_SUCCESS:\n            return { loading: false, organizationPostsCreatePost: action.payload }\n\n        case ORGANIZATION_POSTS_CREATE_POST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const organizationLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_LOGIN_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_LOGIN_SUCCESS:\n            return { loading: false, organizationInfo: action.payload }\n\n        case ORGANIZATION_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n\n}\n\nexport const organizationRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_REGISTER_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_REGISTER_SUCCESS:\n            return { loading: false, organizationInfo: action.payload }\n\n        case ORGANIZATION_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const organizationDetailsReducer = (state = { organization: {} }, action) => {\n    switch (action.type) {\n        case ORGANIZATION_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case ORGANIZATION_DETAILS_SUCCESS:\n            return { loading: false, organization: action.payload }\n\n        case ORGANIZATION_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_DETAILS_RESET:\n            return { organization: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const organizationUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, organizationInfo: action.payload }\n\n        case ORGANIZATION_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <span><Spinner animation=\"border\" role='status' style={{\n            height: '100px',\n            width: '100px',\n            margin: 'auto',\n            display: 'block'\n\n        }}>\n\n        </Spinner><span style={{\n\n            width: '100px',\n            margin: 'AUTO',\n            display: 'block'\n\n        }}  >Loading...</span></span>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import axios from 'axios'\nimport {\n\n    ORGANIZATION_REGISTER_REQUEST, ORGANIZATION_REGISTER_SUCCESS, ORGANIZATION_REGISTER_FAIL, ORGANIZATION_LOGOUT,\n    ORGANIZATION_LOGIN_REQUEST, ORGANIZATION_LOGIN_SUCCESS, ORGANIZATION_LOGIN_FAIL,\n    ORGANIZATION_DETAILS_REQUEST,\n    ORGANIZATION_DETAILS_SUCCESS,\n    ORGANIZATION_DETAILS_FAIL,\n    ORGANIZATION_DETAILS_RESET,\n    ORGANIZATION_UPDATE_PROFILE_REQUEST,\n    ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n    ORGANIZATION_UPDATE_PROFILE_FAIL,\n    ORGANIZATION_UPDATE_PROFILE_RESET,\n    ORGANIZATION_POSTS_LIST_REQUEST,\n    ORGANIZATION_POSTS_LIST_SUCCESS,\n    ORGANIZATION_POSTS_LIST_FAIL,\n    ORGANIZATION_POSTS_CREATE_POST_REQUEST,\n    ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n    ORGANIZATION_POSTS_CREATE_POST_FAIL,\n    ORGANIZATION_UPDATE_POSTS_LIST_REQUEST,\n    ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n    ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n\n} from '../constants/organizationConstants'\n\n\n\nexport const organizationsPostsUpdatePost = (_id, requirementInformation, addressLocation, MemberSelected) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/updatePost/',\n            { _id, requirementInformation, addressLocation, MemberSelected, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const organizationPostslist = (postedByOrganization) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: ORGANIZATION_POSTS_LIST_REQUEST })\n        const {\n            memberList: { members },\n        } = getState()\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/organization/viewPosts/',\n            { postedByOrganization, \"isOrganizationMember\": true },\n            config)\n\n        dispatch({\n            type: ORGANIZATION_POSTS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: ORGANIZATION_POSTS_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\nexport const organizationsPostsCreatePost = (postedByOrganization, requirementInformation, postedByOrganizationEmail, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/createPost/',\n            { postedByOrganization, postedByOrganizationEmail, requirementInformation, addressLocation, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const organizationsLogout = () => (dispatch) => {\n    localStorage.removeItem('organizationInfo')\n    dispatch({ type: ORGANIZATION_LOGOUT })\n    dispatch({ type: ORGANIZATION_DETAILS_RESET })\n\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const organizationsLogin = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/login/',\n            { 'email': email, 'password': password, \"isOrganizationMember\": true },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const organizationsRegister = (email, password, username, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_REGISTER_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/register/',\n            { 'email': email, 'password': password, 'username': username, addressLocation, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_REGISTER_SUCCESS,\n            payload: data\n        })\n        //For auto login of the profile\n        dispatch({\n            type: ORGANIZATION_LOGIN_SUCCESS,\n            payload: data\n        })///ends here\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getOrganizationDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_DETAILS_REQUEST\n        })\n\n        const {\n            organizationLogin: { organizationInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${organizationInfo._id}`\n            }\n        }\n\n        const { data } = await axios.post(\n            \"/api/organization/getProfile/\",\n            { \"_id\": id },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const organizationsUpdateProfile = (id, username, email, password, addressLocation, chairman) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            organizationLogin: { organizationInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${organizationInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/organization/updateDetails/',\n            { '_id': id, username, email, password, addressLocation, chairman },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_RESET,\n            payload: data\n        })\n\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n","import axios from 'axios'\nimport {\n    MEMBER_LIST_REQUEST, MEMBER_LIST_SUCCESS, MEMBER_LIST_FAIL, MEMBER_LOGIN_REQUEST, MEMBER_LOGIN_SUCCESS, MEMBER_LOGIN_FAIL, MEMBER_LOGOUT,\n    MEMBER_REGISTER_SUCCESS, MEMBER_REGISTER_REQUEST, MEMBER_REGISTER_FAIL,\n\n    MEMBER_DETAILS_REQUEST,\n    MEMBER_DETAILS_SUCCESS,\n    MEMBER_DETAILS_FAIL,\n    MEMBER_DETAILS_RESET,\n    MEMBER_UPDATE_PROFILE_REQUEST,\n    MEMBER_UPDATE_PROFILE_SUCCESS,\n    MEMBER_UPDATE_PROFILE_FAIL,\n    MEMBER_UPDATE_PROFILE_RESET,\n    MEMBER_TASKS_LIST_REQUEST,\n    MEMBER_TASKS_LIST_SUCCESS,\n    MEMBER_TASKS_LIST_FAIL\n\n} from '../constants/memberConstants'\n\n// organization/viewPosts/\n\nexport const membersTaskslist = (MemberSelected) => async (dispatch) => {\n    try {\n\n        dispatch({ type: MEMBER_TASKS_LIST_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/member/viewTasks/',\n            { MemberSelected, \"isOrganizationMember\": false },\n            config)\n\n        dispatch({\n            type: MEMBER_TASKS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: MEMBER_TASKS_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\nexport const listMembers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MEMBER_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/organization/viewMembers/')\n\n        dispatch({\n            type: MEMBER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: MEMBER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\n\nexport const membersLogin = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: MEMBER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/member/login/',\n            { 'email': email, 'password': password, \"isOrganizationMember\": false },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const membersLogout = () => (dispatch) => {\n    localStorage.removeItem('memberInfo')\n    dispatch({ type: MEMBER_LOGOUT })\n    dispatch({ type: MEMBER_DETAILS_RESET })\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const membersRegister = (email, password, username, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: MEMBER_REGISTER_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/member/register/',\n            { 'email': email, 'password': password, 'username': username, addressLocation, \"isOrganizationMember\": false },\n            config\n        )\n        //  \n        dispatch({\n            type: MEMBER_REGISTER_SUCCESS,\n            payload: data\n        })\n        //For auto login of the profile\n        dispatch({\n            type: MEMBER_LOGIN_SUCCESS,\n            payload: data\n        })///ends here\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getMemberDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MEMBER_DETAILS_REQUEST\n        })\n\n        const {\n            memberLogin: { memberInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${memberInfo._id}`\n            }\n        }\n\n        const { data } = await axios.post(\n            \"/api/member/getProfile/\",\n            { \"_id\": id },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const membersUpdateProfile = (id, username, email, password, addressLocation, bloodGroup) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            memberLogin: { memberInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${memberInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/member/updateDetails/',\n            { '_id': id, username, email, password, addressLocation, bloodGroup },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_RESET,\n            payload: data\n        })\n\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link, Switch, Redirect } from 'react-router-dom'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\n\nimport ReactDOM from 'react-dom';\n\nimport Loader from './Loader'\nimport Message from './Message'\nimport { organizationsLogout } from '../actions/organizationActions'\nimport { membersLogout } from '../actions/memberActions'\nfunction Header({ history }) {\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = history => () => {\n\n\n        dispatch(organizationsLogout())\n        dispatch(membersLogout())\n\n\n    }\n\n\n\n    return (<Navbar bg=\"\" variant='dark' expand=\"lg\" collapseOnSelect style={{ 'background-color': 'cadetblue' }}>\n        <Container>\n            <LinkContainer to=\"/\" className='my-1 p-1' >\n                <Navbar.Brand><i class=\"fas fa-hands-helping \"   ></i>Pochmoms Video Streaming Website</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{ 'justify-content': 'flex-end' }}>\n\n\n                {organizationInfo ? (\n\n                    <NavDropdown title={organizationInfo.email} id='email' className='my-1 p-1'>\n                        <LinkContainer to='/OrganizationUpdateDetailsScreen'>\n                            <NavDropdown.Item>Update Profile details</NavDropdown.Item>\n                        </LinkContainer>\n\n                        <LinkContainer to='/OrganizationPostsViewPostsScreen'>\n                            <NavDropdown.Item>View Video Posts details</NavDropdown.Item>\n                        </LinkContainer>\n\n\n\n\n\n                        <NavDropdown.Item onClick={logoutHandler(history)}>Logout</NavDropdown.Item>\n\n                        {/*   <LinkContainer to='/OrganizationViewMembersScreen'>\n                            <NavDropdown.Item>View Members Profile Details</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/OrganizationPostsCreatePostsScreen'>\n                            <NavDropdown.Item>Create Organization Posts</NavDropdown.Item>\n                </LinkContainer>   */}\n\n                    </NavDropdown>\n                ) : memberInfo ? (\n\n                    <NavDropdown title={memberInfo.email} id='email' className='my-1 p-1'>\n                        <LinkContainer to='/MemberUpdateDetailsScreen'>\n                            <NavDropdown.Item>Member Profile</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/MemberViewTasksScreen'>\n                            <NavDropdown.Item>View Member's Assigned Task Details</NavDropdown.Item>\n                        </LinkContainer>\n\n\n\n                        <NavDropdown.Item onClick={logoutHandler(history)}>Logout</NavDropdown.Item>\n\n                    </NavDropdown>\n                ) : (<Nav className=\"\" style={{ 'justify-content': 'flex-end', 'margin-right': '0px' }}>\n                    {/* <LinkContainer to='/MemberHomeScreen' className='my-1 p-1'>\n                        <Nav.Link ><i className=\"fas fa-user my-2 p-2\"></i>Member Register/Login Screen</Nav.Link>\n                </LinkContainer>   */}\n\n                    <LinkContainer to='/OrganizationHomeScreen' className='my-1 p-1'>\n                        <Nav.Link ><i className=\"fas fa-user my-2 p-2\"></i> Register/Login </Nav.Link>\n                    </LinkContainer>\n\n                </Nav>\n                )}\n\n\n\n\n\n\n            </Navbar.Collapse>\n        </Container>\n    </Navbar >\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nfunction Footer() {\n    return (\n        <div>\n            <footer style={{ background: 'lightgray' }}>\n                <Container>\n                    <Row>\n\n                        <Col className='text-center py-3'>Copyright &copy; Pochmoms Video Streaming Website </Col>\n\n\n                    </Row>\n\n\n                </Container>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/MotoOfOurOrganization.0c95bd5e.JPG\";","import React from 'react'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\nimport HomeScreen from \"./HomeScreen\";\nimport MotoOfOurOrganizationScreen from \"./MotoOfOurOrganizationScreen\";\nfunction DonationScreen() {\n    return (\n        <div><h2 className='my-2 p-2' style={{margin:'0 auto','text-align': 'center'}}> Make a donation </h2>\n            <h4 className='my-2 p-2'>\n\n                Type of donations \n                \n            </h4>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Financial Help</li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Food Donations </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Medicinies </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Materials, Clothings etc. </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Blood donations</li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Can volunteer in activities by <Link disabled to='/' style={{\n                        color: 'rgb(50 55 39)', 'background-color': '#4bbf73'\n                    }} ><i class=\"fas fa-user\"></i>(Register as a Member for volunteering in Member Registration Page)</Link></li>\n            \n            <h5 className='my-2 p-2'> Kindly contact this email for the donations link: <a href=''>'thehelpinghands@gmail.com'</a></h5>\n            {/* <img src=\"https://natureconservancy-h.assetsadobe.com/is/image/content/dam/tnc/nature/en/photos/tnc_96397258_Full.jpg?crop=0,708,4000,1250&amp;wid=3200&amp;hei=1000&amp;scl=1.25\" alt=\"The morning clouds and fog lift off the small towns in the lower Himalaya mountains.\" class=\"image-position-desktop__center-middle image-position-mobile__center-middle hero-img-ie-fix whiteText\"></img> */}\n            <h6><LinkContainer to='/' className='my-1 p-1'>\n                <Nav.Link >Back to '<i class=\"fas fa-crosshairs\"></i>Motto of our Organization' page</Nav.Link>\n            </LinkContainer>\n            </h6></div >\n    )\n}\n\nexport default DonationScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport MotoOfOurOrganizationScreen from '../MotoOfOurOrganizationScreen'\n\n\nfunction MemberHomeScreen() {\n    return (\n        <div> <h3>Currently viewing Member Home screen</h3>\n            <div id='member_homeScreenContents' >\n                <h5>Links:</h5>\n                <Link to='/MemberRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member Registration Screen</Link>\n\n                <Link to='/MemberLoginScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Member Login Screen</Link>\n\n                {/* <Link to='/MemberUpdateDetailsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member Update Details Screen</Link> */}\n\n                {/* <Link to='/MemberViewTasksScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member View Task Details Screen</Link> */}\n\n\n                {/* <MotoOfOurOrganizationScreen /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default MemberHomeScreen\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport MotoOfOurOrganizationScreen from '../MotoOfOurOrganizationScreen'\n\nfunction OrganizationHomeScreen() {\n    return (\n        <div> <h3>Currently viewing Register/Login screen</h3>\n            <div id='Organization_homeScreenContents'  >\n                <h5>Links:</h5>\n                <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Registration Screen</Link>\n\n                <Link to='/OrganizationLoginScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Login Screen</Link>\n\n                {/* <Link to='/OrganizationUpdateDetailsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Update Details Screen</Link>\n\n                <Link to='/OrganizationViewMembersScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization View Members Screen </Link>\n\n                <Link to='/OrganizationPostsViewPostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Posts View Posts Screen </Link>\n\n                <Link to='/OrganizationPostsCreatePostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Posts Create posts Screen </Link> */}\n\n                {/* <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Organization Login Screen</Link> */}\n\n\n\n\n\n                {/* <MotoOfOurOrganizationScreen /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default OrganizationHomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { membersRegister } from '../../actions/memberActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction MemberRegisterScreen() {\n\n    // { location, history }\n\n    // const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n    // const config = {\n    //     headers: {\n    //         'Content-type': 'application/json'\n    //     }\n    // }\n    // const [email, setEmail] = useState('')\n    // const [username, setUsername] = useState('')\n    // const [password, setPassword] = useState('')\n\n\n    // //const [members, setMembers] = useState([])\n    // useEffect(() => {\n    //     console.log('Use Effect triggered')\n    //     async function fetchMembers() {\n    //         // const { data } = await axios.post(\n    //         //     '/api/organization/viewMembers/' \n    //         //     { 'email': email, 'password': password, 'username': username, \"isOrganizationMember\": false }, config) // ${ member.param.id }\n    //         // localStorage.setItem('userInfo', JSON.stringify(data))\n    //         console.log('Use Effect triggered')\n    //         //setMembers(data)\n    //     }\n    //     //Have to think for this\n    //     const submitHandler = (e) => {\n    //         e.preventDefault()\n    //         fetchMembers()\n    //     }\n    // }, [])\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const memberRegister = useSelector(state => state.memberRegister)\n    const { error, loading, memberInfo } = memberRegister\n\n    useEffect(() => {\n        // if (memberInfo) {\n        //     history.push(redirect)\n        // }\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(membersRegister(email, password, username, addressLocation))\n    }\n    // \n\n\n\n    return (\n        <Container className='my-3 p-2' style={{ 'text-align': 'center' }}  >\n\n\n            <h2> Register as a Member </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {memberInfo && <Alert  > {memberInfo.username} is registered succesfully</Alert>}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n                <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n                </Alert>\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Register as a Member\n                </Button>\n\n\n            </Form >\n            <Link to='/MemberLoginScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already regsitered? Click for Member Login screen</Link>\n        </Container >\n    )\n}\n\nexport default MemberRegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { memberLogin } from '../../actions/memberActions'\nimport { Card, Container, Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { membersLogin } from '../../actions/memberActions'\n\nfunction MemberLoginScreen({ location, history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { error, loading, memberInfo } = memberLogin\n\n    useEffect(() => {\n        if (memberInfo) {\n            history.push(redirect)\n        }\n    }, [redirect, memberInfo, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(membersLogin(email, password))\n    }\n\n\n\n\n    return (\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Login as a Member </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                {/* {['checkbox'].map((type) => (\n                    <div key={type} className=\"mb-3\">\n                        <Form.Check type={type} id={`check-api-${type}`}>\n                            <Form.Check.Input type={type} isValid />\n                            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n                             <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback> \n                        </Form.Check>\n                    </div>\n                ))} */}\n\n                <Alert variant=\"success\">\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n\n                </Alert>\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Login as a Member\n                </Button>\n\n\n            </Form>\n            <Link to='/MemberRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Not regsitered yet? Click for Registration screen</Link>\n        </div >\n    )\n}\n\nexport default MemberLoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { getMemberDetails, membersUpdateProfile } from '../../actions/memberActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nimport { MEMBER_UPDATE_PROFILE_RESET } from '../../constants/memberConstants'\n\n\n\nfunction MemberUpdateDetailsScreen({ history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    // const [addressStreet, setAddressStreet] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [bloodGroup, setBloodGroup] = useState('')\n\n\n\n\n    const dispatch = useDispatch()\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    //const memberRegister = useSelector(state => state.memberRegister)\n    const memberDetails = useSelector(state => state.memberDetails)\n    const { loading, member } = memberDetails\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n    const memberUpdateProfile = useSelector(state => state.memberUpdateProfile)\n\n    const { error, success } = memberUpdateProfile\n    // error, \n    //const { error, loading, memberInfo } = memberRegister\n\n    useEffect(() => {\n        if (!memberInfo) {\n            history.push('/MemberLoginScreen')\n        } else {\n            if (!member || !member.username || success || memberInfo._id !== member._id) {\n                dispatch({ type: MEMBER_UPDATE_PROFILE_RESET })\n                dispatch(getMemberDetails(memberInfo._id))\n\n            } else {\n                setUsername(member.username)\n                setEmail(member.email)\n                // setAddressStreet(member.addressStreet)\n                setAddressLocation(member.addressLocation)\n                setBloodGroup(member.bloodGroup)\n\n            }\n        }\n\n\n\n\n\n\n    }, [dispatch, history, memberInfo, member, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        //dispatch(membersRegister(email, password, username))\n\n        dispatch(membersUpdateProfile(memberInfo._id, username, email, password, addressLocation, bloodGroup))\n        // 'id': member._id,\n        //     'username': username,\n        //         'email': email,\n        //             'password': password\n    }\n\n    // \n\n\n    return (\n        <div>\n\n            <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The Member Updates Details Page </h2>\n\n\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {/* {!loading && <Alert className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }} > {memberInfo.email} details are succesfully updated</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" disabled style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formGridAddressStreet\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Street\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i> Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridBloodGroup\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Blood Group</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Blood Group\" style={{ width: '70%' }}\n                        value={bloodGroup}\n                        onChange={(e) => setBloodGroup(e.target.value)} />\n                </Form.Group>\n\n\n\n\n\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Update details\n                    </Button>\n\n\n            </Form >\n\n        </div>\n    )\n}\n\nexport default MemberUpdateDetailsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport axios from 'axios'\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nfunction OrganizationViewMembersScreen({ member, history }) {\n\n    // const [members, setMembers] = useState([])\n    // useEffect(() => {\n    //     console.log('Use Effect triggered')\n    //     async function fetchMembers() {\n    //         const { data } = await axios.get('/api/organization/viewMembers/') /${member.param.id}\n    //         setMembers(data)\n    //     }\n    //     fetchMembers()\n    // }, [])\n\n    const dispatch = useDispatch()\n    const memberList = useSelector(state => state.memberList)\n    const { error, loading, members } = memberList\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else { dispatch(listMembers()) }\n    }, [dispatch, history])\n\n    return (\n        <Card className='my-3 p-3 rounded'>\n            {/* {member.name} */}\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div class='GetMembers'> <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The view member  details page  </h2>\n                        <Table striped bordered hover variant=\"light\">\n                            <thead>\n                                <tr>\n                                    <th style={{ 'font-size': '13px' }}>Member Id:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Name:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Email:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Location: </th>\n                                    <th style={{ 'font-size': '13px' }}>Blood Group:</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {members.map(member => (\n                                    // <Row>\n\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Username: {member.username}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Email: {member.email}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Area: {member.city_state_country}  </p>\n\n\n                                    //     </Col>\n\n\n                                    // </Row>\n\n\n                                    <tr>\n                                        <td key={member._id} >\n                                            <p>  {member._id} </p></td>\n                                        <td key={member._id} >\n                                            <p>  {member.username} </p></td>\n                                        <td key={member._id} >\n                                            <p>  {member.email}  </p> </td>\n                                        <td key={member._id}><p>\n                                            {member.addressLocation} </p></td>\n                                        <td key={member._id}><p>\n                                            {/* {moment(member.createdAt).format('YYYY-MMM-DD')} </p></td> */}\n                                            {member.bloodGroup} </p></td>\n                                    </tr>\n\n\n\n\n                                ))}\n\n                            </tbody>\n                        </Table>\n\n                        <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                            Number of Registered Members: {Object.keys(members).length}\n                        </h5>\n                    </div >}\n\n\n            {/*  Use the a href to navigate through other url-> Load a new windows */}\n            {/* <Card.body>\n               \n                 <Card.text as div>\n                    <div className='my-3'>\n                        {member.name} </div>\n                </Card.text> \n\n           </Card.body>  */}\n\n        </Card >\n    )\n}\n\nexport default OrganizationViewMembersScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsRegister } from '../../actions/organizationActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction OrganizationRegisterScreen() {\n    //{ location, history }\n    // const a = { \"_id\": 16, \"username\": \"sadasd\", \"email\": \"sdsa@asdas.sdfs\", \"password\": \"asdasd\", \"Address_line\": null, \"city_state_country\": null, \"createdAt\": \"2021-04-19T22:11:52.795653Z\", \"isOrganizationMember\": true, \"yearOfEstablishment\": null, \"chairman\": null }\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n\n    const dispatch = useDispatch()\n\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const organizationRegister = useSelector(state => state.organizationRegister)\n    const { error, loading, organizationInfo } = organizationRegister\n\n    useEffect(() => {\n        //if (organizationInfo) {\n        //   history.push(redirect)\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(organizationsRegister(email, password, username, addressLocation))\n    }\n    return (\n\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Register Screen </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n\n            {organizationInfo && <Alert  > {organizationInfo.username} is registered succesfully</Alert>}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n\n                <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n                </Alert>\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Register\n                </Button>\n\n\n            </Form>\n            <Link to='/OrganizationLoginScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already regisitered? Click for  Login screen</Link>\n        </div >\n    )\n}\n\n\nexport default OrganizationRegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsLogin } from '../../actions/organizationActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction OrganizationLoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { error, loading, organizationInfo } = organizationLogin\n\n    useEffect(() => {\n        if (organizationInfo) {\n            history.push(redirect)\n        }\n    }, [history, organizationInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(organizationsLogin(email, password))\n    }\n    return (\n\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Login Screen </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                {/* {['checkbox'].map((type) => (\n                    <div key={type} className=\"mb-3\">\n                        <Form.Check type={type} id={`check-api-${type}`}>\n                            <Form.Check.Input type={type} isValid />\n                            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n                             <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback> \n                        </Form.Check>\n                    </div>\n                ))} */}\n\n                < Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n\n                </Alert >\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Login\n                </Button>\n\n\n            </Form >\n            <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Not regisitered yet? Click for Registration screen</Link>\n        </div >\n\n    )\n}\n\nexport default OrganizationLoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { getOrganizationDetails, organizationsUpdateProfile } from '../../actions/organizationActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nimport { ORGANIZATION_UPDATE_PROFILE_RESET } from '../../constants/organizationConstants'\nfunction OrganizationUpdateDetailsScreen({ history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    // const [addressStreet, setAddressStreet] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [chairman, setChairman] = useState('')\n\n\n\n\n    const dispatch = useDispatch()\n\n    const organizationDetails = useSelector(state => state.organizationDetails)\n    const { loading, organization } = organizationDetails\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const organizationUpdateProfile = useSelector(state => state.organizationUpdateProfile)\n\n    const { error, success } = organizationUpdateProfile\n\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            if (!organization || !organization.username || success || organizationInfo._id !== organization._id) {\n                dispatch({ type: ORGANIZATION_UPDATE_PROFILE_RESET })\n                dispatch(getOrganizationDetails(organizationInfo._id))\n\n            } else {\n                setUsername(organization.username)\n                setEmail(organization.email)\n                // setAddressStreet(organization.addressStreet)\n                setAddressLocation(organization.addressLocation)\n                setChairman(organization.chairman)\n\n\n            }\n        }\n\n\n\n\n\n\n    }, [dispatch, history, organizationInfo, organization, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n\n\n        dispatch(organizationsUpdateProfile(organizationInfo._id, username, email, password, addressLocation, chairman))\n\n    }\n\n\n\n\n    return (\n        <div>\n\n            <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The Profile Update Details Page </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {/* {!loading && <Alert className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }} > {memberInfo.email} details are succesfully updated</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email:</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" disabled style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password:</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridchairman\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}> Organization Name:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter chairman \" style={{ width: '70%' }}\n                        value={chairman}\n                        onChange={(e) => setChairman(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formGridAddressStreet\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Street\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i> Address Location:</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n\n\n\n\n\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Update details\n                </Button>\n\n\n            </Form >\n        </div>\n    )\n}\n\nexport default OrganizationUpdateDetailsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\n// import Moment from 'react-moment';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table, Modal } from 'react-bootstrap'\nimport Select from 'react-select'\n\nimport axios from 'axios'\nimport { organizationPostslist, organizationsPostsUpdatePost } from '../../actions/organizationActions'\n\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\n\nfunction OrganizationPostsViewPostsScreen({ organizationPost, history }) {\n\n    //const organizationPost = []\n    // const dateToFormat = '1976-04-19T12:59-0500';\n    const [editModel, setEditmodel] = useState(false)\n    const [selectedPost, setSelectedPost] = useState({})\n\n    const [requirementInformation, setRequirementInformation] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [addressStreet, setAddressStreet] = useState('')\n    const [MemberSelected, setMemberSelected] = useState('')\n    const [post_id, setPost_id] = useState('')\n    const [post, setPost] = useState('')\n\n    //Video file\n    const [selectedFile, setSelectedFile] = useState('')\n    //Video file description\n    const [description, setDescription] = useState('')\n    const [videoPost_id, setVideoPost_id] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const memberList = useSelector(state => state.memberList)\n    const { error: errorMemberList, loading: loadingMembers, members } = memberList\n\n    const organizationPostList = useSelector(state => state.organizationPostList)\n    const { error, loading, organizationPosts } = organizationPostList\n\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const organizationPostUpdateList = useSelector(state => state.organizationPostUpdateList)\n    const { error: errorOrganizationPostUpdateList, loading: loadingOrganizationPostUpdateList, organizationPostsUpdatePost } = organizationPostUpdateList\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            dispatch(listMembers())\n            dispatch(organizationPostslist(organizationInfo._id))\n\n\n        }\n    }, [history, organizationPostsUpdatePost, errorOrganizationPostUpdateList])\n\n\n\n    const editOrganizationPost = (data) => {\n\n        console.log(data)\n\n\n        setEditmodel(true)\n        setSelectedPost(data)\n\n        setRequirementInformation(data.requirementInformation)\n        setAddressLocation(data.addressLocation)\n        setMemberSelected(data.MemberSelected)\n\n        //For Edit Model\n        setPost_id(data.id) //post ID\n        setVideoPost_id(data.id)\n        setDescription(data.description)\n\n\n        console.log(members)\n\n    }\n    const handleClose = () => {\n\n        setEditmodel(false)\n\n\n    }\n    const handleChange = (e) => {\n        console.log(e)\n        setMemberSelected(e.value)\n        setPost(e)\n\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setEditmodel(false)\n\n        console.log(requirementInformation)\n        console.log(addressLocation)\n        console.log(MemberSelected)\n        console.log(post_id)\n\n\n        // dispatch(organizationsPostsUpdatePost(post_id, requirementInformation, addressLocation, MemberSelected))\n        // dispatch(organizationsPostsCreatePost(organizationInfo._id, requirementInformation, organizationInfo.email, addressLocation))\n\n    }\n\n\n    const onChangeHandler1 = (e) => {\n        // this.setState({\n        //     selectedFile: e.target.files[0],\n        //     loaded: 0,\n        // });\n        setSelectedFile(e.target.files[0]);\n        console.log(e.target.files[0]);\n    };\n\n    const handleSubmit1 = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        // const { selectedFile } = this.state;\n        // formData.append('VideopostId', organizationInfo._id);\n        formData.append('postedByOrganization', organizationInfo._id);\n        formData.append('postedByOrganizationEmail', organizationInfo.email);\n\n        formData.append('description', description);\n\n        formData.append('video_file', selectedFile);\n        console.log(formData);\n        fetch('/api/organization/createVideoPost/', {\n            method: 'POST',\n            body: formData,\n        });\n        alert('The file has been uploaded successfully. Refresh the page');\n        dispatch(organizationPostslist(organizationInfo._id))\n    };\n\n    const handleSubmit2 = (e) => {\n        e.preventDefault();\n        setEditmodel(false)\n        const formData = new FormData();\n        // const { selectedFile } = this.state;\n        formData.append('videoPost_id', videoPost_id);\n        formData.append('postedByOrganization', organizationInfo._id);\n        formData.append('postedByOrganizationEmail', organizationInfo.email);\n\n        formData.append('description', description);\n\n        formData.append('video_file', selectedFile);\n        console.log(formData);\n        fetch('/api/organization/updateVideoPost/', {\n            method: 'POST',\n            body: formData,\n        });\n        alert('The file has been saved successfully. Refresh the page');\n\n\n    };\n\n    // // When user selects a file, set state\n    // onFileChange = e => {\n    //     setSelectedFile(e.target.files[0]);\n    // };\n    // // when user uploads file this function should execute\n    // onFileUpload = () => {\n    //     const formData = new FormData();\n    //     formData.append(\n    //         \"myFile\",\n    //         selectedFile,\n    //         selectedFile.name\n    //     );\n    //     // console log uploaded file details\n    //     console.log(selectedFile);\n    //     // user send req to the server\n    //     axios.post(\"api/uploadfile\", formData);\n    // };\n\n\n    return (\n        <div>\n\n            <Card className='my-3 p-3 rounded'>\n                {/* {member.name} */}\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        :\n                        <div class='GetOrganizationPosts'> <h2 style={{ 'textAlign': 'center' }}>The Video Posts Details: </h2>\n\n\n                            <form onSubmit={handleSubmit1}>\n\n\n                                <h3>Upload a new file:</h3>\n\n\n                                <Form.Group controlId=\"formGridDescription\" style={{ display: 'flex' }}>\n                                    <Form.Label style={{ width: '30%' }}>File Description: </Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter File Description\" style={{ width: '70%' }}\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)} />\n                                </Form.Group>\n                                <label>\n                                    <input type=\"file\" name=\"file\" onChange={onChangeHandler1} />\n                                </label>\n                                <button style={{ 'background-color': '#008CBA' }} type=\"submit\">\n                                    Upload\n                                </button>\n                                <br /><br />\n\n                            </form>\n\n\n                            <Table striped bordered hover variant=\"light\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ 'font-size': '13px' }}>Post Id:</th>\n                                        <th style={{ 'font-size': '13px' }}>(Reference)Description:</th>\n                                        <th style={{ 'font-size': '13px' }}>Posted by email:</th>\n                                        <th style={{ 'font-size': '13px' }}> Video:</th>\n                                        <th style={{ 'font-size': '13px' }} > Timeline:</th>\n\n                                    </tr>\n                                </thead>\n\n                                {organizationPosts.map((organizationPost, index) => (\n                                    // <Row>\n\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Organization Requirement Information: {organizationPost.requirementInformation}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Posted by: {organizationInfo.username}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Assigned to : {organizationPost.MemberSelected_id ? organizationPost.MemberSelected_id : 'None'}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Timeline : <moment >  </moment> </p>\n\n\n                                    //     </Col>\n\n                                    // </Row>\n                                    <tbody>\n\n                                        <tr>\n                                            <td key={organizationPost._id} >\n                                                <p> {index + 1} </p></td>\n                                            <td key={organizationPost._id} >\n                                                <p>({organizationPost.id}){organizationPost.description} </p></td>\n                                            <td key={organizationPost._id} >\n                                                <p>  {organizationPost.postedByOrganizationEmail}  </p> </td>\n\n\n                                            <td key={organizationPost._id}  ><p>\n\n                                                <video controls width=\"250\">\n\n\n\n                                                    <source src={organizationPost.video_file}\n                                                        type=\"video/webm\" />\n                                                </video>\n\n\n\n                                            </p></td>\n\n                                            {/*\n                                                {organizationPost.MemberSelected ? (organizationPost.MemberSelected) : 'None'}\n                                                \n                                                \n                                                <td key={organizationPost._id}  >\n\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Company\"\n                                                    name=\"company\"\n                                                    value={organizationPost.MemberSelected}\n                                                    onChange={(e) => onChange(e)}\n                                                />\n                                            </td> */}\n\n\n                                            <td key={organizationPost._id}><p>\n                                                {moment(organizationPost.createdAt).format('DD-MMM-YYYY')}\n                                            </p> </td>\n                                            <td key={organizationPost._id}>\n                                                <p>\n\n                                                    <button type=\"button\" onClick={() => editOrganizationPost(organizationPost)} >Edit Post</button>\n                                                </p>\n                                            </td>\n\n                                        </tr>\n                                        {/* < h1 hidden (organizationPost.MemberSelected ? i++ : 'NULL) /> */}\n                                    </tbody>\n                                    // getValueOfI(organizationPost)\n\n\n                                ))}\n                            </Table>\n                            <h5 className='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                Number of Video Posts: {Object.keys(organizationPosts).length}\n                            </h5>\n                            <h5 className='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                {/* Number of Members assigned: {i} */}\n                            </h5>\n\n                        </div >}\n\n\n\n                <Modal show={editModel} onHide={handleClose} animation={false} style={{ top: '20vh' }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title style={{ 'max-width': '90%', margin: '0 28px' }} >Video Post Details Reference: {post_id} </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {loadingOrganizationPostUpdateList ? <Loader />\n                            : errorOrganizationPostUpdateList ? <Message variant='danger'>{errorOrganizationPostUpdateList}</Message> : ''}\n                        <Form className='p-2' style={{ 'max-width': '95%', margin: '0 auto' }}>\n\n                            <Form.Group controlId=\"formGridDescription\" style={{ display: 'flex' }}>\n                                <Form.Label style={{ width: '30%' }}>File Description: </Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter File Description\" style={{ width: '70%' }}\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)} />\n                            </Form.Group>\n                            <label>\n                                <h3>Upload a new file:</h3>\n                                <input type=\"file\" name=\"file\" onChange={onChangeHandler1} />\n                            </label>\n\n                            {/* <Form.Group controlId=\"formGridMemberSelected\" style={{ display: 'flex' }}>\n                                <Form.Label style={{ width: '30%' }}>Member Selected_id</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                                    value={MemberSelected}\n                                    onChange={(e) => setMemberSelected(e.target.value)} />\n                            </Form.Group> \n                            <span>Select Member: </span><Select\n                                value={post}\n                                onChange={handleChange}\n                                options={members && members.map(e => ({ value: e._id, label: e.username + \" from \" + e.addressLocation }))}\n                            />      */}\n\n                        </Form>\n\n\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleSubmit2}  >\n                            Save Post\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                {/*  Use the a href to navigate through other url-> Load a new windows */}\n                {/* <Card.body>\n               \n                 <Card.text as div>\n                    <div className='my-3'>\n                        {member.name} </div>\n                </Card.text> \n\n           </Card.body>  */}\n\n            </Card >\n\n\n\n\n        </div >\n    )\n}\n\n\nexport default OrganizationPostsViewPostsScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsPostsCreatePost } from '../../actions/organizationActions'\nimport { listMembers } from '../../actions/memberActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nimport Dropdown from 'react-dropdown';\nfunction OrganizationPostsCreatePostsScreen({ history }) {\n\n\n\n\n    const [requirementInformation, setRequirementInformation] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [addressStreet, setAddressStreet] = useState('')\n    const [MemberSelected_id, setMemberSelected_id] = useState('')\n    const [postedByOrganization_id, setpostedByOrganization_id] = useState('')\n    const [post_id, setPost_id] = useState('')\n\n    const dispatch = useDispatch()\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    // const memberList = useSelector(state => state.memberList)\n    // const { error, loading, members } = memberList\n\n    // const organizationPostList = useSelector(state => state.organizationPostList)\n    // const { error, loading, organizationPosts } = organizationPostList\n\n\n    const organizationPostCreatePost = useSelector(state => state.organizationPostCreatePost)\n    const { error, loading, organizationPostsCreatePost } = organizationPostCreatePost\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            dispatch(listMembers())\n\n        }\n    }, [dispatch, history, organizationInfo])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n\n\n        dispatch(organizationsPostsCreatePost(organizationInfo._id, requirementInformation, organizationInfo.email, addressLocation))\n\n    }\n\n\n    return (\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> The Organization Posts Create Screen</h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n\n            {/* {organizationInfo && <Alert  > {organizationInfo.username} is registered succesfully</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Requirement Information</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter requirement Information\" style={{ width: '70%' }}\n                        value={requirementInformation}\n                        onChange={(e) => setRequirementInformation(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n                {/* <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                {/* <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Member Selected_id</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={MemberSelected_id}\n                        onChange={(e) => setMemberSelected_id(e.target.value)} />\n                </Form.Group> */}\n\n                {/* <Dropdown\n                    title=\"Select Member\"\n                    list={members.username}\n                    toggleItem={toggleItem}\n                /> */}\n\n\n                {/* <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update Posts details page. Have a good day!\n</p>\n\n                </Alert> */}\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Post requirement\n                    </Button>\n\n\n            </Form>\n            <Link to='/OrganizationPostsViewPostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already Created? Click to check Created Posts Screen</Link>\n\n        </div >\n    )\n}\n\nexport default OrganizationPostsCreatePostsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\n// import Moment from 'react-moment';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport axios from 'axios'\nimport { membersTaskslist } from '../../actions/memberActions'\n\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nfunction MemberViewTasksScreen({ memberTasks, history }) {\n\n\n    const dispatch = useDispatch()\n    const memberTasksList = useSelector(state => state.memberTasksList)\n    const { error, loading, memberTask } = memberTasksList\n\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n\n    useEffect(() => {\n        if (!memberLogin) {\n            history.push('/MemberLoginScreen')\n        } else {\n            dispatch(membersTaskslist(memberInfo._id))\n\n\n        }\n    }, [dispatch, history])\n\n\n\n    // <video controls width=\"250\">\n\n\n\n    //                             <source src=\"../../../../static/images/videos/Islands_-_2119_1.mp4\"\n    //                                 type=\"video/webm\" />\n\n    //                             <source src=\"/media/cc0-videos/flower.mp4\"\n    //                                 type=\"video/mp4\" />\n\n    //                             Sorry, your browser doesn't support embedded videos.\n    //                         </video>\n    return (\n        <div>\n            <Card className='my-3 p-3 rounded'>\n                {/* {member.name}    <img src={image} style={{ width: '100%' }} />  */}\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        :\n                        <div class='GetOrganizationPosts'> <h2 style={{ 'textAlign': 'center' }}>The Member's AssignedTask Details Screen </h2>\n\n\n\n\n                            <Table striped bordered hover variant=\"light\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ 'font-size': '13px' }}>Organization Post Id:</th>\n                                        <th style={{ 'font-size': '13px' }}>Organization Requirement Information:</th>\n                                        <th style={{ 'font-size': '13px' }}>Posted by Organization email:</th>\n                                        <th style={{ 'font-size': '13px' }}>Video:</th>\n\n\n                                    </tr>\n                                </thead>\n\n                                {memberTask.map(memberTask => (\n\n                                    <tbody>\n\n                                        <tr>\n                                            <td key={memberTask._id} >\n                                                <p>  {memberTask.id} </p></td>\n                                            <td key={memberTask._id} >\n                                                <p>  {memberTask.description} </p></td>\n\n                                            <td key={memberTask._id} >\n                                                <p>\n\n\n                                                    <video controls width=\"250\">\n\n\n\n                                                        <source src={\"http://127.0.0.1:8000\" + memberTask.video_file}\n                                                            type=\"video/webm\" />\n                                                    </video>\n                                                </p> </td>\n\n                                            <td key={memberTask._id}><p>\n                                                {moment(memberTask.createdAt).format('DD-MMM-YYYY')}\n                                            </p> </td>\n\n                                        </tr>\n                                        {/* < h1 hidden (organizationPost.MemberSelected ? i++ : 'NULL) /> */}\n                                    </tbody>\n                                    // getValueOfI(organizationPost)\n\n\n                                ))}\n                            </Table>\n                            <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                Number of Tasks Assigned: {Object.keys(memberTask).length}\n                            </h5>\n                            <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                {/* Number of Members assigned: {i} */}\n                            </h5>\n\n                        </div >}\n\n\n\n\n\n            </Card >\n\n        </div>\n    )\n}\n\nexport default MemberViewTasksScreen\n","import { Container, Form, Button } from \"react-bootstrap\";\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport DonationScreen from \"./screens/DonationScreen\";\nimport MotoOfOurOrganizationScreen from \"./screens/MotoOfOurOrganizationScreen\";\nimport MemberHomeScreen from \"./screens/MemberScreens/MemberHomeScreen\";\nimport OrganizationHomeScreen from \"./screens/OrganizationScreens/OrganizationHomeScreen\";\nimport MemberRegisterScreen from \"./screens/MemberScreens/MemberRegisterScreen\";\nimport MemberLoginScreen from \"./screens/MemberScreens/MemberLoginScreen\";\nimport MemberUpdateDetailsScreen from \"./screens/MemberScreens/MemberUpdateDetailsScreen\";\n\nimport OrganizationViewMembersScreen from \"./screens/OrganizationScreens/OrganizationViewMembersScreen\";\nimport OrganizationRegisterScreen from \"./screens/OrganizationScreens/OrganizationRegisterScreen\";\nimport OrganizationLoginScreen from \"./screens/OrganizationScreens/OrganizationLoginScreen\";\nimport OrganizationUpdateDetailsScreen from \"./screens/OrganizationScreens/OrganizationUpdateDetailsScreen\";\nimport OrganizationPostsViewPostsScreen from \"./screens/OrganizationScreens/OrganizationPostsViewPostsScreen\";\nimport OrganizationPostsCreatePostsScreen from \"./screens/OrganizationScreens/OrganizationPostsCreatePostsScreen\";\nimport MemberViewTasksScreen from \"./screens/MemberScreens/MemberViewTasksScreen\";\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <div>\n        <Header />\n\n        {/* <main className=\"py-3\"> */}\n        <div style={{ background: 'whitesmoke' }}>\n          <Container style={{ 'max-width': '1280px' }} >\n            {/* <h1>My App</h1> */}\n            {/* <Route path='/' component={HomeScreen} exact />\n          <Route path='/MotoOfOurOrganizationScreen' component={MotoOfOurOrganizationScreen} />\n          <Route path='/' component={MotoOfOurOrganizationScreen} exact />\n        \n        */}\n\n            <Route path='/' component={OrganizationPostsViewPostsScreen} exact />\n            <Route path='/DonationScreen' component={DonationScreen} />\n\n            <Route path='/MemberHomeScreen' component={MemberHomeScreen} />\n            <Route path='/OrganizationHomeScreen' component={OrganizationHomeScreen} />\n\n            {/* Below sample Screens */}\n\n            <Route path='/MemberRegisterScreen' component={MemberRegisterScreen} />\n            <Route path='/MemberLoginScreen' component={MemberLoginScreen} />\n            <Route path='/MemberUpdateDetailsScreen' component={MemberUpdateDetailsScreen} />\n            <Route path='/MemberViewTasksScreen' component={MemberViewTasksScreen} />\n\n            <Route path='/OrganizationRegisterScreen' component={OrganizationRegisterScreen} />\n            <Route path='/OrganizationLoginScreen' component={OrganizationLoginScreen} />\n            <Route path='/OrganizationUpdateDetailsScreen' component={OrganizationUpdateDetailsScreen} />\n            <Route path='/OrganizationViewMembersScreen' component={OrganizationViewMembersScreen} />\n            <Route path='/OrganizationPostsViewPostsScreen' component={OrganizationPostsViewPostsScreen} />\n            <Route path='/OrganizationPostsCreatePostsScreen' component={OrganizationPostsCreatePostsScreen} />\n\n\n          </Container>\n        </div>\n        {/* </main> */}\n\n        <Footer />\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}